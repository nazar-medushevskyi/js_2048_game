{"version":3,"sources":["scripts/main.js"],"names":["everySquare","Array","from","document","querySelectorAll","everyRow","mainButton","querySelector","gameScore","canMoveInAnyDirection","score","appendNumber","emptySquares","filter","square","innerHTML","length","setCellValue","Math","floor","random","setColumn","filtered","map","cell","parseInt","value","className","getNewRow","column","direction","num","missing","unfilled","fill","concat","checkMoveAndFinish","includes","checkIfGameFinished","moveDown","i","moveAndCombine","td","cellIndex","moveUp","moveRight","tr","rowIndex","cells","moveLeft","filteredColumn","newRow","canMove","move","combine","row","collection","k","prev","total","hasPairs","updateScore","j","emptyString","find","col","curr","push","isWon","classList","remove","gameOver","currCell","rightCell","bottomCell","isGameOver","restart","addEventListener","e","target","add","contains","key"],"mappings":"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","file":"main.09992834.js","sourceRoot":"../src","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n'use strict';\n\nconst everySquare = Array.from(document.querySelectorAll('.field-cell'));\nconst everyRow = Array.from(document.querySelectorAll('.field-row'));\nconst mainButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nlet canMoveInAnyDirection = [];\nlet score = 0;\n\nfunction appendNumber() {\n  const emptySquares = everySquare.filter(square => square.innerHTML === '');\n\n  if (emptySquares.length === 0) {\n    return;\n  }\n\n  const index = Math.floor(Math.random() * emptySquares.length);\n  const randomSquare = emptySquares[index];\n  const value = Math.random() > 0.9 ? 4 : 2;\n\n  setCellValue(randomSquare, value);\n}\n\nfunction setColumn(filtered) {\n  return filtered.map(cell => parseInt(cell.innerHTML, 10) || '');\n}\n\nfunction setCellValue(cell, value) {\n  cell.innerHTML = value || '';\n  cell.className = 'field-cell' + (value ? ` field-cell--${value}` : '');\n}\n\nfunction getNewRow(column, direction) {\n  const filtered = column.filter(num => num);\n  const missing = 4 - filtered.length;\n  const unfilled = Array(missing).fill('');\n\n  return (\n    direction === 'down' || direction === 'right'\n      ? unfilled.concat(filtered)\n      : filtered.concat(unfilled)\n  );\n}\n\nfunction checkMoveAndFinish() {\n  if (canMoveInAnyDirection.includes(true)) {\n    canMoveInAnyDirection = [];\n    appendNumber();\n  }\n\n  checkIfGameFinished();\n}\n\nfunction moveDown() {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = everySquare.filter(td => td.cellIndex === i);\n\n    moveAndCombine('down', filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveUp() {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = everySquare.filter(td => td.cellIndex === i);\n\n    moveAndCombine('up', filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveRight() {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = everyRow.filter(tr => tr.rowIndex === i)[0].cells;\n\n    moveAndCombine('right', filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = everyRow.filter(tr => tr.rowIndex === i)[0].cells;\n\n    moveAndCombine('left', filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveAndCombine(direction, filteredColumn) {\n  const column = setColumn([...filteredColumn]);\n  const newRow = getNewRow(column, direction);\n\n  if (canMove(direction, column)) {\n    move(filteredColumn, newRow);\n    combine(direction, newRow, filteredColumn);\n  }\n}\n\nfunction combine(direction, row, collection) {\n  if (direction === 'left' || direction === 'up') {\n    for (let k = 1; k < row.length; k++) {\n      const prev = row[k - 1];\n      const total = row[k] + prev;\n      const hasPairs = row[k] === prev && prev !== ''\n        && row[k + 1] === row[k + 2] && row[k + 1] && row[k + 2];\n\n      if (hasPairs) {\n        row[k - 1] = total;\n        row[k] = row[k + 1] + row[k + 2];\n        row[k + 1] = '';\n        row[k + 2] = '';\n\n        updateScore(total + row[k]);\n\n        setCellValue(collection[k - 1], total);\n        setCellValue(collection[k], row[k]);\n        setCellValue(collection[k + 1], row[k + 1]);\n        setCellValue(collection[k + 2], row[k + 2]);\n\n        break;\n      }\n\n      if (row[k] === prev && row[k]) {\n        row[k - 1] = total;\n        row[k] = '';\n\n        updateScore(total);\n\n        setCellValue(collection[k - 1], total);\n        setCellValue(collection[k], row[k]);\n      }\n\n      if (row[k] && prev === '') {\n        row[k - 1] = row[k];\n        row[k] = '';\n\n        setCellValue(collection[k - 1], row[k - 1]);\n        setCellValue(collection[k], row[k]);\n      }\n    }\n  }\n\n  if (direction === 'right' || direction === 'down') {\n    for (let k = row.length - 1; k > 0; k--) {\n      const prev = row[k - 1];\n      const total = row[k] + prev;\n      const hasPairs = row[k] === prev && prev !== ''\n        && row[k - 2] === row[k - 3] && row[k - 2] && row[k - 3];\n\n      if (hasPairs) {\n        row[k] = total;\n        row[k - 1] = row[k - 2] + row[k - 3];\n        row[k - 2] = '';\n        row[k - 3] = '';\n\n        updateScore(total + row[k]);\n\n        setCellValue(collection[k], total);\n        setCellValue(collection[k - 1], row[k - 1]);\n        setCellValue(collection[k - 2], '');\n        setCellValue(collection[k - 3], '');\n\n        break;\n      }\n\n      if (row[k] === prev && prev) {\n        row[k - 1] = '';\n        row[k] = total;\n\n        updateScore(total);\n\n        setCellValue(collection[k], total);\n        setCellValue(collection[k - 1], '');\n      }\n\n      if (prev && row[k] === '') {\n        row[k] = row[k - 1];\n        row[k - 1] = '';\n\n        setCellValue(collection[k], row[k]);\n        setCellValue(collection[k - 1], '');\n      }\n    }\n  }\n}\n\nfunction move(filteredColumn, row) {\n  for (let j = 0; j < filteredColumn.length; j++) {\n    setCellValue(filteredColumn[j], row[j]);\n  }\n}\n\nfunction canMove(direction, column) {\n  if (direction === 'left' || direction === 'up') {\n    for (let j = 1; j < column.length; j++) {\n      const emptyString = column.find(col => col === '');\n      const curr = column[j];\n      const prev = column[j - 1];\n\n      if (prev === emptyString && curr) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n\n      if (column[0] === '' && curr) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n\n      if ((curr && prev) && (curr === prev)) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n    }\n  }\n\n  if (direction === 'right' || direction === 'down') {\n    for (let j = column.length - 1; j > 0; j--) {\n      const emptyString = column.find(col => col === '');\n      const curr = column[j];\n      const prev = column[j - 1];\n\n      if (curr === emptyString && prev) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n\n      if (column[column.length - 1] === '' && curr) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n\n      if ((curr && prev) && (curr === prev)) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkIfGameFinished() {\n  const cells = Array.from(document.querySelectorAll('td'));\n  const isWon = cells.find(cell => cell.innerHTML.includes('2048'));\n\n  if (isWon) {\n    document.querySelector('.message-win').classList.remove('hidden');\n\n    return;\n  }\n\n  let gameOver = true;\n\n  for (let i = 0; i < cells.length; i++) {\n    const currCell = cells[i];\n    const rightCell = cells[i + 1];\n    const bottomCell = cells[i + 4];\n    const isGameOver = !currCell.innerHTML || (rightCell\n      && currCell.cellIndex !== 3 && currCell.innerHTML === rightCell.innerHTML)\n      || (bottomCell && currCell.innerHTML === bottomCell.innerHTML);\n\n    if (isGameOver) {\n      gameOver = false;\n      break;\n    }\n  }\n\n  if (gameOver) {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nfunction updateScore(value) {\n  score += value;\n  gameScore.innerHTML = score;\n}\n\nfunction restart() {\n  Array.from(document.querySelectorAll('td')).map(cell => {\n    setCellValue(cell, '');\n\n    return cell;\n  });\n\n  score = 0;\n\n  updateScore(score);\n  appendNumber();\n  appendNumber();\n}\n\nmainButton.addEventListener('click', (e) => {\n  const { target } = e;\n\n  document.querySelector('.message-start').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n\n  target.classList.remove('start');\n  target.classList.add('restart');\n  target.innerHTML = 'Restart';\n\n  if (target.classList.contains('restart')) {\n    restart();\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  switch (e.key) {\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    default:\n      break;\n  }\n});\n"]}